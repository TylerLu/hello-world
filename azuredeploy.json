{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Linux Virtual Machines (Jenkins and Kubernetes)."
        },
        "defaultValue": "azureuser"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Linux Virtual Machines (Jenkins and Kubernetes)."
        }
      },
      "servicePrincipalClientId": {
        "type": "string",
        "metadata": {
          "description": "Service Principal Client ID used by Jenkins and Azure Container Service (AKS)."
        }
      },
      "servicePrincipalClientSecret": {
        "type": "securestring",
        "metadata": {
          "description": "Service Principal Client Secret used by Jenkins and Azure Container Service(AKS)."
        }
      },
      "jenkinsDnsPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Jenkins Virtual Machine."
        }
      },
      "kubernetesClusterName": {
        "type": "string",
        "metadata": {
          "description": "The name of the Managed Cluster resource."
        }
      },
      "kubernetesDnsPrefix": {
        "type": "string",
        "metadata": {
          "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
        }
      },
      "kubernetesAgentCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The number of nodes for the cluster."
        },
        "minValue": 1,
        "maxValue": 50
      },
      "kubernetesAgentVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v2",
        "allowedValues": [
          "Standard_A10",
          "Standard_A11",
          "Standard_A2",
          "Standard_A2_v2",
          "Standard_A2m_v2",
          "Standard_A3",
          "Standard_A4",
          "Standard_A4_v2",
          "Standard_A4m_v2",
          "Standard_A5",
          "Standard_A6",
          "Standard_A7",
          "Standard_A8",
          "Standard_A8_v2",
          "Standard_A8m_v2",
          "Standard_A9",
          "Standard_D1_v2",
          "Standard_D11",
          "Standard_D11_v2",
          "Standard_D12",
          "Standard_D12_v2",
          "Standard_D13",
          "Standard_D13_v2",
          "Standard_D14",
          "Standard_D14_v2",
          "Standard_D15_v2",
          "Standard_D2",
          "Standard_D2_v2",
          "Standard_D3",
          "Standard_D3_v2",
          "Standard_D4",
          "Standard_D4_v2",
          "Standard_D5_v2",
          "Standard_DS11",
          "Standard_DS11_v2",
          "Standard_DS12",
          "Standard_DS12_v2",
          "Standard_DS13",
          "Standard_DS13_v2",
          "Standard_DS14",
          "Standard_DS14_v2",
          "Standard_DS15_v2",
          "Standard_DS2",
          "Standard_DS2_v2",
          "Standard_DS3",
          "Standard_DS3_v2",
          "Standard_DS4",
          "Standard_DS4_v2",
          "Standard_DS5_v2",
          "Standard_F16",
          "Standard_F16s",
          "Standard_F2",
          "Standard_F2s",
          "Standard_F4",
          "Standard_F4s",
          "Standard_F8",
          "Standard_F8s",
          "Standard_G1",
          "Standard_G2"
        ],
        "metadata": {
          "description": "The size of the Virtual Machine."
        }
      },
      "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.7.7",
        "allowedValues": [
          "1.7.7",
          "1.8.1"
        ],
        "metadata": {
          "description": "The version of Kubernetes."
        }
      },
      "gitRepository": {
        "type": "string",
        "metadata": {
          "description": "URL to a public git repository that includes a Dockerfile."
        },
        "defaultValue": "https://github.com/TylerLu/hello-world"
      },
      "jenkinsArtifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "URL to a folder that includes artifacts."
        },
        "defaultValue": "https://raw.githubusercontent.com/TylerLu/hello-world/master/"
      }
    },
    "variables": {
      "resourcePrefix": "jenkins",
      "storageAccountName": "[concat(variables('resourcePrefix'), uniquestring(resourceGroup().id))]",
      "acrName": "[uniqueString(resourceGroup().id)]",
      "jenkinsOSDiskName": "[concat(variables('resourcePrefix'), 'OSDisk')]",
      "jenkinsNicName": "[concat(variables('resourcePrefix'), 'VMNic')]",
      "subnetName": "[concat(variables('resourcePrefix'), 'Subnet')]",
      "publicIPAddressName": "[concat(variables('resourcePrefix'), 'PublicIP')]",
      "jenkinsVmStorageAccountContainerName": "vhds",
      "jenkinsVmNameme": "[concat(variables('resourcePrefix'), 'VM')]",
      "jenkinsVmExtensionName": "[concat(variables('resourcePrefix'), 'Init')]",
      "jenkinsVirtualNetworkName": "[concat(variables('resourcePrefix'), 'VNET')]",
      "jenkinsFrontEndNSGName": "[concat(variables('resourcePrefix'), 'NSG')]",
      "kubernetesClusterName": "[parameters('kubernetesClusterName')]",
      "kubernetesDnsPrefix": "[parameters('kubernetesDnsPrefix')]",
      "kubernetesAgentCount": "[parameters('kubernetesAgentCount')]",
      "kubernetesAgentVMSize": "[parameters('kubernetesAgentVMSize')]",
      "kubernetesVersion": "[parameters('kubernetesVersion')]",
      "_extensionScript": "jenkins-acr-aks.sh",
      "_artifactsLocationSasToken": ""
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2016-01-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "name": "[variables('acrName')]",
        "type": "Microsoft.ContainerRegistry/registries",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-10-01",
        "sku": {
            "name": "Basic"
        },
        "properties": {
          "adminUserEnabled": true
        }
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('jenkinsDnsPrefix')]"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('jenkinsFrontEndNSGName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "NSG - Front End"
        },
        "properties": {
          "securityRules": [
            {
              "name": "ssh-rule",
              "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "http-rule",
              "properties": {
                "description": "Allow HTTP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('jenkinsVirtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jenkinsFrontEndNSGName'))]"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('jenkinsFrontEndNSGName'))]"
        ]
      },
      {
        "apiVersion": "2016-09-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('jenkinsNicName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('jenkinsVirtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('jenkinsVirtualNetworkName')),'/subnets/',variables('subnetName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('jenkinsVmNameme')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNicName'))]",
          "[resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_DS1_v2"
          },
          "osProfile": {
            "computerName": "[variables('jenkinsVmNameme')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('jenkinsVmStorageAccountContainerName'), '/', variables('jenkinsOSDiskName'), '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jenkinsNicName'))]"
              }
            ]
          }
        },
        "resources": [
          {
            "type": "extensions",
            "name": "[variables('jenkinsVmExtensionName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', variables('jenkinsVmNameme'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[concat(parameters('jenkinsArtifactsLocation'), 'jenkins/', variables('_extensionScript'), variables('_artifactsLocationSasToken'))]"
                ]
              },
              "protectedSettings": {
                "commandToExecute": "[concat('./' , variables('_extensionScript'),' -jf \"', reference(variables('publicIPAddressName')).dnsSettings.fqdn, '\" -u \"', parameters('adminUsername') , '\" -g \"', parameters('gitRepository') , '\" -r \"https://',reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer, '\" -ru \"', listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName')), '2017-10-01').username, '\" -rp \"', listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName')), '2017-10-01').passwords[0].value, '\" -subid \"', subscription().subscriptionId, '\" -tid \"', subscription().tenantId, '\" -spid \"', parameters('servicePrincipalClientId'), '\" -ss \"', parameters('servicePrincipalClientSecret'), '\" -al \"', parameters('jenkinsArtifactsLocation'), '\" -st \"', variables('_artifactsLocationSasToken'), '\"' )]"
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2017-08-31",
        "type": "Microsoft.ContainerService/managedClusters",
        "location": "[resourceGroup().location]",
        "name": "[variables('kubernetesClusterName')]",
        "properties": {
          "kubernetesVersion": "[variables('kubernetesVersion')]",
           "dnsPrefix": "[variables('aksDnsPrefix')]",
           "agentPoolProfiles": [
              {
                "name": "agentpool",
                "osDiskSizeGB": "0",
                "count": "[variables('kubernetesAgentCount')]",
                "vmSize": "[variables('kubernetesAgentVMSize')]",
                "osType": "Linux",
                "storageProfile": "ManagedDisks"
              }
            ],
            "linuxProfile": {
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]"
            },
            "servicePrincipalProfile": {
                "ClientId": "[parameters('servicePrincipalClientId')]",
                "Secret": "[parameters('servicePrincipalClientSecret')]"
            }
        }
    }
    ],
    "outputs": {
      "jenkinsURL": {
        "type": "string",
        "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      },
      "jenkinsSSH": {
        "type": "string",
        "value": "[concat('ssh -L 8080:localhost:8080 ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      },
      "azureContainerRegistryUrl": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName'))).loginServer]"
      },
      "kubernetesControlPlaneFQDN": {
        "type": "string",
        "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', variables('kubernetesClusterName'))).fqdn]"
      }
    }
  }