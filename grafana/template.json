{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "sshUsername": {
            "type": "string",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "grafanaAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "These credentials give access to the grafana admin account"
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "grafana",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the grafana instance"
            }
        },
        "domainNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for domain name to access Grafana which is in the format: {prefix}.{location}.cloudapp.azure.com"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2",
            "metadata": {
                "description": "size of the vm to use for the grafana instance"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual network address"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "grafanaSubnet",
            "metadata": {
                "description": "Subnet for grafana"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Grafana subnet CIDR"
            }
        }
    },
    "variables": {
        "installScripts": [
            "https://gallery.azure.com/artifact/20151001/grafana-labs.grafana_ossstable.1.0.2/Artifacts/scripts/install-grafana.sh",
            "https://raw.githubusercontent.com/TylerLu/hello-world/master/grafana/configure-grafana.sh"
        ],
        "installOpts": "[concat('-A ', parameters('grafanaAdminPassword'))]",
        "configureOpts": "-A \"Beat%40Apple123\" -p \"3000\" -S \"3b7912c3-ad06-426e-8627-41912372774b\" -T \"3dad2b09-9e66-4eb8-9bef-9f44544b0e74\" -i \"b3486972-fff3-4a67-bc97-b37a86bbe654\" -s \"3526bb0d-1d66-41bd-baa1-0301e0638aa2\"",
        "nicName": "[concat(parameters('namespace'), '-nic')]",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('subnetName'))]",
        "passwordAuth": {
            "computerName": "[concat(parameters('namespace'), '-vm')]",
            "adminUsername": "[parameters('sshUsername')]",
            "adminPassword": "[parameters('sshPassword')]"
        },
        "OSDiskName": "concat(parameters('namespace'), '-disk')",
        "securityGroupName": "[concat(parameters('namespace'), '-nsg')]"
    },
    "resources": [
        {
            "name": "[parameters('virtualNetworkName')]",
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainNamePrefix')]"
                }
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('securityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "Allows inbound SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Grafana",
                        "properties": {
                            "description": "Allows inbound grafana HTTP traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('namespace'), '-ip-config')]",
                        "properties": {
                            "privateIPAllocationMethod": "[variables('publicIPAddressType')]",
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressId')]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('namespace')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[variables('passwordAuth')]",
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "installGrafana",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('namespace'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": "[variables('installScripts')]"
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash install-grafana.sh ', variables('installOpts'), '; bash configure-grafana.sh ', variables('configureOpts'))]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {}
}